
// import type { Timestamp } from 'firebase/firestore'; // No longer needed

export interface JobDescriptionFile {
  id: string; // Client-side UUID
  file: File;
  dataUri: string;
  name: string;
}

export interface ResumeFile {
  id: string; // Client-side UUID
  file: File;
  dataUri: string;
  name: string;
}

// Represents a single, distinct job role extracted by AI, managed in client state
export interface ExtractedJobRole {
  id: string; // UUID generated by AI flow or client
  name: string; // Display name (e.g., "Software Engineer")
  contentDataUri: string; // Data URI of the content specific to this role
  originalDocumentName: string; // Name of the original file it came from
  // userId and createdAt removed
}

export interface RankedCandidate {
  id: string; // Unique ID for this candidate entry, typically UUID from AI flow
  name: string;
  score: number;
  atsScore: number;
  keySkills: string;
  feedback: string;
  originalResumeName: string;
  resumeDataUri: string;
  // userId and createdAt removed
}

// Filters apply to the candidates ranked for the currently selected job role
export interface Filters {
  scoreRange: [number, number];
  skillKeyword: string;
}

// Represents screening results for one job role, managed in client state
export interface JobScreeningResult {
  // id: string; // No longer a Firestore document ID
  jobDescriptionId: string; // ID of the ExtractedJobRole this result is for
  jobDescriptionName: string; // Name of the job role
  jobDescriptionDataUri: string; // Data URI of the job role content used for ranking
  candidates: RankedCandidate[];
  // userId and createdAt removed
}

// Input for the bulk screening AI flow
export interface PerformBulkScreeningInput {
  // jobRolesToScreen: Array<Omit<ExtractedJobRole, 'userId' | 'createdAt'>>; // Adjusted to remove Firestore fields
  jobRolesToScreen: ExtractedJobRole[]; // Simpler: AI flow uses the client-side ExtractedJobRole
  resumesToRank: ResumeFile[];
}

// Output for the bulk screening AI flow
export type PerformBulkScreeningOutput = JobScreeningResult[];


// Result for a single resume's ATS score analysis, managed in client state
export interface AtsScoreResult {
  // id: string; // No longer a Firestore document ID, can use resumeId or generate temp one for keys
  resumeId: string; // Original ID of the ResumeFile processed
  resumeName: string;
  candidateName?: string;
  atsScore: number;
  atsFeedback: string;
  resumeDataUri: string;
  // userId and createdAt removed
}

// Represents a set of generated interview questions, managed in client state
export interface InterviewQuestionsSet {
    // id: string; // No longer a Firestore document ID
    roleTitle: string; // The job title these questions are for
    jobDescriptionDataUri?: string; // Optional: if linked to a specific JD content
    focusAreas?: string;
    technicalQuestions: string[];
    behavioralQuestions: string[];
    situationalQuestions: string[];
    roleSpecificQuestions: string[];
    // userId and createdAt removed
}
